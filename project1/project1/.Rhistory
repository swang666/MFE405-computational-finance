df_frontier2 = as.data.frame(cbind(E_XZ,V_XZ))
min_v = min(V_XY)
min_v_return = df_frontier[df_frontier$V_XY == min_v,]$E_XY
df_eff_frontier = df_frontier[df_frontier$E_XY >= min_v_return,]
#Frontier plot
w = seq(0,1,0.001)
e = w*INTC_e+(1-w)*MSFT_e
cov1.2 = cov(INTC_Ret[!is.na(INTC_Ret)],MSFT_Ret[!is.na(MSFT_Ret)])
sig1.2=sqrt((w*INTC_stdev)^2+((1-w)*MSFT_stdev)^2+2*w*(1-w)*cov1.2)
plot(x = sig1.2,y = e, main = "Frontier",
xlab = "Standard deviation", ylab = "Expected return")
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
# portfolio X with Rf 0.01
w_X = solve(cov_matrix)%*% (R - 0.01)/sum(solve(cov_matrix)%*% (R - 0.01))
E_X = as.numeric(t(w_X) %*% R)
r= cbind(INTC_Ret,MSFT_Ret,LUV_Ret,MCD_Ret,JNJ_Ret)
cov_matrix = cov(r)*52
cov_matrix
INTC_stdev
INTC_stdev^2
INTC_stdev^2*52
abs(cov_matrix)
cov_matrix = abs(cov_matrix)
source('C:/Users/sumen/Desktop/UCLA/400/hw7/hw7-1-10.R', echo=TRUE)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
cov_matrix
R
w_X
sum(w_X)
rm(list = ls())
source('C:/Users/sumen/Desktop/UCLA/400/hw7/hw7-1-10.R', echo=TRUE)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
cov_matrix
MSFT_stdev^2*52
cov(INTC_stdev,MSFT_stdev)
cov(INTC_Ret,MSFT_Ret)
cov(INTC_Ret,MSFT_Ret)*52
#Frontier plot
w = seq(0,1,0.001)
cov1.2
e
Cov_XY
cov1.2
INTC_stdev
INTC_stdev^2
#Frontier plot
w = seq(0,1,0.001)
e = w*INTC_e+(1-w)*MSFT_e
cov1.2 = cov(INTC_Ret[!is.na(INTC_Ret)],MSFT_Ret[!is.na(MSFT_Ret)])
sig1.2=sqrt((w*INTC_stdev*sqrt(52))^2+((1-w)*MSFT_stdev*sqrt(52))^2+2*w*(1-w)*cov1.2*52)
plot(x = sig1.2,y = e, main = "Frontier",
xlab = "Standard deviation", ylab = "Expected return")
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
E_X
E_Y
JNJ_e
JNJ_v
rm(list = ls())
source('C:/Users/sumen/Desktop/UCLA/400/hw7/hw7-1-10.R', echo=TRUE)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
source('C:/Users/sumen/Desktop/UCLA/400/hw7/hw7-1-10.R', echo=TRUE)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
weight = seq(-20,20,0.02)
E_XY = weight*E_X+(1-weight)*E_Y
E_XZ = weight*E_X+(1-weight)*E_Z
V_XY = sqrt(weight^2*Var_X+(1-weight)^2*Var_Y+2*weight*(1-weight)*Cov_XY)
V_XZ = sqrt(weight^2*Var_X+(1-weight)^2*Var_Z+2*weight*(1-weight)*Cov_XZ)
df_frontier = as.data.frame(cbind(E_XY,V_XY))
df_frontier2 = as.data.frame(cbind(E_XZ,V_XZ))
min_v = min(V_XY)
min_v_return = df_frontier[df_frontier$V_XY == min_v,]$E_XY
df_eff_frontier = df_frontier[df_frontier$E_XY >= min_v_return,]
#Frontier plot
w = seq(0,1,0.001)
e = w*INTC_e+(1-w)*MSFT_e
cov1.2 = cov(INTC_Ret[!is.na(INTC_Ret)],MSFT_Ret[!is.na(MSFT_Ret)])
sig1.2=sqrt((w*INTC_stdev*sqrt(52))^2+((1-w)*MSFT_stdev*sqrt(52))^2+2*w*(1-w)*cov1.2*52)
plot(x = sig1.2,y = e, main = "Frontier",
xlab = "Standard deviation", ylab = "Expected return")
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
weight = seq(-100,100,0.05)
E_XY = weight*E_X+(1-weight)*E_Y
E_XZ = weight*E_X+(1-weight)*E_Z
V_XY = sqrt(weight^2*Var_X+(1-weight)^2*Var_Y+2*weight*(1-weight)*Cov_XY)
V_XZ = sqrt(weight^2*Var_X+(1-weight)^2*Var_Z+2*weight*(1-weight)*Cov_XZ)
df_frontier = as.data.frame(cbind(E_XY,V_XY))
df_frontier2 = as.data.frame(cbind(E_XZ,V_XZ))
min_v = min(V_XY)
min_v_return = df_frontier[df_frontier$V_XY == min_v,]$E_XY
df_eff_frontier = df_frontier[df_frontier$E_XY >= min_v_return,]
#Frontier plot
w = seq(0,1,0.001)
e = w*INTC_e+(1-w)*MSFT_e
cov1.2 = cov(INTC_Ret[!is.na(INTC_Ret)],MSFT_Ret[!is.na(MSFT_Ret)])
sig1.2=sqrt((w*INTC_stdev*sqrt(52))^2+((1-w)*MSFT_stdev*sqrt(52))^2+2*w*(1-w)*cov1.2*52)
plot(x = sig1.2,y = e, main = "Frontier",
xlab = "Standard deviation", ylab = "Expected return")
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
weight = seq(-50,50,0.1)
E_XY = weight*E_X+(1-weight)*E_Y
E_XZ = weight*E_X+(1-weight)*E_Z
V_XY = sqrt(weight^2*Var_X+(1-weight)^2*Var_Y+2*weight*(1-weight)*Cov_XY)
V_XZ = sqrt(weight^2*Var_X+(1-weight)^2*Var_Z+2*weight*(1-weight)*Cov_XZ)
df_frontier = as.data.frame(cbind(E_XY,V_XY))
df_frontier2 = as.data.frame(cbind(E_XZ,V_XZ))
min_v = min(V_XY)
min_v_return = df_frontier[df_frontier$V_XY == min_v,]$E_XY
df_eff_frontier = df_frontier[df_frontier$E_XY >= min_v_return,]
#Frontier plot
w = seq(0,1,0.001)
e = w*INTC_e+(1-w)*MSFT_e
cov1.2 = cov(INTC_Ret[!is.na(INTC_Ret)],MSFT_Ret[!is.na(MSFT_Ret)])
sig1.2=sqrt((w*INTC_stdev*sqrt(52))^2+((1-w)*MSFT_stdev*sqrt(52))^2+2*w*(1-w)*cov1.2*52)
plot(x = sig1.2,y = e, main = "Frontier",
xlab = "Standard deviation", ylab = "Expected return")
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
w_Z
Var_Z
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = Var_Z, y = E_Z, size = 2), color = 'yellow') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
Var_Z
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'yellow') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
#tangent portfolio
Rf = 0.05
x_rf = c(0, sqrt(Var_Z))
y_rf = c(Rf, E_Z)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'yellow') +
geom_line(aes(x = x_rf, y = y_rf)), color = 'yellow') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'yellow') +
geom_line(aes(x = x_rf, y = y_rf), color = 'yellow') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_line(aes(x = x_rf, y = y_rf), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_line(aes(x = x_rf, y = y_rf, size = 1.5), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_line(aes(x = x_rf, y = y_rf, size = 2), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_line(aes(x = x_rf, y = y_rf, size = 1.8), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_abline(aes(x = x_rf, y = y_rf, size = 1.8), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
reg = lm(y_rf ~ x_rf)
reg$coefficients
reg$coefficients[1]
reg$coefficients[[1]
]
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
cov_matrix
cov_matrix[1:2,1:2]
R
R2 = R[1:2]
R2
w_Z2 = solve(mat2)%*% (R2 - 0.05)/sum(solve(mat2)%*% (R2 - 0.05))
mat2 = cov_matrix[1:2,1:2]
R2 = R[1:2]
w_Z2 = solve(mat2)%*% (R2 - 0.05)/sum(solve(mat2)%*% (R2 - 0.05))
E_Z2 = as.numeric(t(w_Z2) %*% R2)
Var_Z2 = as.numeric(t(w_Z2) %*% mat2 %*% w_Z2)
x_rf2 = c(0, sqrt(Var_Z2))
y_rf2 = c(Rf, E_Z2)
reg2 = lm(y_rf2 ~ x_rf2)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return') +
xlim(0 , 0.4)
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return') +
xlim(0 , 0.45)
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return') +
xlim(0 , 0.45) + ylim(0, 0.3)
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return') +
xlim(0 , 0.45) + ylim(0.05, 0.3)
print(g1)
#sharpe ratio
sr_all5 = (E_Z - Rf)/sqrt(Var_Z)
sr_2 = (E_Z2 - Rf)/sqrt(Var_Z2)
sr_all5
sr_2
Sharpe_INTC
Sharpe_MSFT
w_INTC
w_MSFT
w_port = (E_Z - Rf)/(A * Var_Z)
#risk aversion
A = 5
w_port = (E_Z - Rf)/(A * Var_Z)
w_port
w_Z
w_assets = w_port * w_Z
w_port
w_assets
rm(list = ls())
source('C:/Users/sumen/Desktop/UCLA/400/hw7/hw7-1-10.R', echo=TRUE)
data("iris")
rm(list = ls())
data("iris")
View(iris)
par(mfrow = c(2,2))
source('~/.active-rstudio-document', echo=TRUE)
?pt
pt(0 ,df =50)
qt(0.5)
qt(0.5, df = 30)
pf(268, df1=1, df2=211)
pf(4, df1=1, df2=211)
?rbinom
rbinom(44, 1000, 0.64)
rbinom(1000, 44, 0.64)
rbinom(1000, 44, 0.64)
?hist
setwd("C:/Users/sumen/Desktop/UCLA/405/project1/project1")
df1 = read.csv('ques2.csv')
df1
View(df1)
names(df1)
3.14/4
