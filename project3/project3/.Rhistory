V_XY = sqrt(weight^2*Var_X+(1-weight)^2*Var_Y+2*weight*(1-weight)*Cov_XY)
V_XZ = sqrt(weight^2*Var_X+(1-weight)^2*Var_Z+2*weight*(1-weight)*Cov_XZ)
df_frontier = as.data.frame(cbind(E_XY,V_XY))
df_frontier2 = as.data.frame(cbind(E_XZ,V_XZ))
min_v = min(V_XY)
min_v_return = df_frontier[df_frontier$V_XY == min_v,]$E_XY
df_eff_frontier = df_frontier[df_frontier$E_XY >= min_v_return,]
#Frontier plot
w = seq(0,1,0.001)
e = w*INTC_e+(1-w)*MSFT_e
cov1.2 = cov(INTC_Ret[!is.na(INTC_Ret)],MSFT_Ret[!is.na(MSFT_Ret)])
sig1.2=sqrt((w*INTC_stdev*sqrt(52))^2+((1-w)*MSFT_stdev*sqrt(52))^2+2*w*(1-w)*cov1.2*52)
plot(x = sig1.2,y = e, main = "Frontier",
xlab = "Standard deviation", ylab = "Expected return")
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
weight = seq(-100,100,0.05)
E_XY = weight*E_X+(1-weight)*E_Y
E_XZ = weight*E_X+(1-weight)*E_Z
V_XY = sqrt(weight^2*Var_X+(1-weight)^2*Var_Y+2*weight*(1-weight)*Cov_XY)
V_XZ = sqrt(weight^2*Var_X+(1-weight)^2*Var_Z+2*weight*(1-weight)*Cov_XZ)
df_frontier = as.data.frame(cbind(E_XY,V_XY))
df_frontier2 = as.data.frame(cbind(E_XZ,V_XZ))
min_v = min(V_XY)
min_v_return = df_frontier[df_frontier$V_XY == min_v,]$E_XY
df_eff_frontier = df_frontier[df_frontier$E_XY >= min_v_return,]
#Frontier plot
w = seq(0,1,0.001)
e = w*INTC_e+(1-w)*MSFT_e
cov1.2 = cov(INTC_Ret[!is.na(INTC_Ret)],MSFT_Ret[!is.na(MSFT_Ret)])
sig1.2=sqrt((w*INTC_stdev*sqrt(52))^2+((1-w)*MSFT_stdev*sqrt(52))^2+2*w*(1-w)*cov1.2*52)
plot(x = sig1.2,y = e, main = "Frontier",
xlab = "Standard deviation", ylab = "Expected return")
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
weight = seq(-50,50,0.1)
E_XY = weight*E_X+(1-weight)*E_Y
E_XZ = weight*E_X+(1-weight)*E_Z
V_XY = sqrt(weight^2*Var_X+(1-weight)^2*Var_Y+2*weight*(1-weight)*Cov_XY)
V_XZ = sqrt(weight^2*Var_X+(1-weight)^2*Var_Z+2*weight*(1-weight)*Cov_XZ)
df_frontier = as.data.frame(cbind(E_XY,V_XY))
df_frontier2 = as.data.frame(cbind(E_XZ,V_XZ))
min_v = min(V_XY)
min_v_return = df_frontier[df_frontier$V_XY == min_v,]$E_XY
df_eff_frontier = df_frontier[df_frontier$E_XY >= min_v_return,]
#Frontier plot
w = seq(0,1,0.001)
e = w*INTC_e+(1-w)*MSFT_e
cov1.2 = cov(INTC_Ret[!is.na(INTC_Ret)],MSFT_Ret[!is.na(MSFT_Ret)])
sig1.2=sqrt((w*INTC_stdev*sqrt(52))^2+((1-w)*MSFT_stdev*sqrt(52))^2+2*w*(1-w)*cov1.2*52)
plot(x = sig1.2,y = e, main = "Frontier",
xlab = "Standard deviation", ylab = "Expected return")
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.09, y = 0.09, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(aes(V_XY,E_XY),color = 'yellow')+
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
w_Z
Var_Z
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = Var_Z, y = E_Z, size = 2), color = 'yellow') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
Var_Z
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'yellow') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
#tangent portfolio
Rf = 0.05
x_rf = c(0, sqrt(Var_Z))
y_rf = c(Rf, E_Z)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'yellow') +
geom_line(aes(x = x_rf, y = y_rf)), color = 'yellow') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'black') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'yellow') +
geom_line(aes(x = x_rf, y = y_rf), color = 'yellow') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_line(aes(x = x_rf, y = y_rf), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_line(aes(x = x_rf, y = y_rf, size = 1.5), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_line(aes(x = x_rf, y = y_rf, size = 2), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_line(aes(x = x_rf, y = y_rf, size = 1.8), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_abline(aes(x = x_rf, y = y_rf, size = 1.8), color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
reg = lm(y_rf ~ x_rf)
reg$coefficients
reg$coefficients[1]
reg$coefficients[[1]
]
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black') +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
cov_matrix
cov_matrix[1:2,1:2]
R
R2 = R[1:2]
R2
w_Z2 = solve(mat2)%*% (R2 - 0.05)/sum(solve(mat2)%*% (R2 - 0.05))
mat2 = cov_matrix[1:2,1:2]
R2 = R[1:2]
w_Z2 = solve(mat2)%*% (R2 - 0.05)/sum(solve(mat2)%*% (R2 - 0.05))
E_Z2 = as.numeric(t(w_Z2) %*% R2)
Var_Z2 = as.numeric(t(w_Z2) %*% mat2 %*% w_Z2)
x_rf2 = c(0, sqrt(Var_Z2))
y_rf2 = c(Rf, E_Z2)
reg2 = lm(y_rf2 ~ x_rf2)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return')
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return') +
xlim(0 , 0.4)
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return') +
xlim(0 , 0.45)
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return') +
xlim(0 , 0.45) + ylim(0, 0.3)
print(g1)
g1 = ggplot() +
geom_point(data = df_frontier, aes(V_XY,E_XY), color = 'yellow') +
geom_point(data = df_points, aes(Sigma, R, color = factor(symbol), size = 2)) +
geom_point(aes(x = sqrt(Var_Z), y = E_Z, size = 2), color = 'black') +
geom_point(aes(x = sqrt(Var_Z2), y = E_Z2, size = 2), color = 'black') +
geom_abline(intercept = reg$coefficients[[1]], slope = reg$coefficients[[2]], color = 'black', size = 1.5) +
geom_abline(intercept = reg2$coefficients[[1]], slope = reg2$coefficients[[2]], color = 'black', size = 1.5) +
geom_point(aes(x=min_v,y=min_v_return, size = 2), color = 'red') +
geom_point(aes(x=sig1.2, y=e), color = 'blue')+
guides(size = FALSE)+
annotate("text", label = "min variance", x = 0.15, y = 0.17, col = 'red') +
ggtitle('Frontier of all five assets') +
xlab('standard deviation') + ylab('return') +
xlim(0 , 0.45) + ylim(0.05, 0.3)
print(g1)
#sharpe ratio
sr_all5 = (E_Z - Rf)/sqrt(Var_Z)
sr_2 = (E_Z2 - Rf)/sqrt(Var_Z2)
sr_all5
sr_2
Sharpe_INTC
Sharpe_MSFT
w_INTC
w_MSFT
w_port = (E_Z - Rf)/(A * Var_Z)
#risk aversion
A = 5
w_port = (E_Z - Rf)/(A * Var_Z)
w_port
w_Z
w_assets = w_port * w_Z
w_port
w_assets
rm(list = ls())
source('C:/Users/sumen/Desktop/UCLA/400/hw7/hw7-1-10.R', echo=TRUE)
data("iris")
rm(list = ls())
data("iris")
View(iris)
par(mfrow = c(2,2))
source('~/.active-rstudio-document', echo=TRUE)
?pt
pt(0 ,df =50)
qt(0.5)
qt(0.5, df = 30)
pf(268, df1=1, df2=211)
pf(4, df1=1, df2=211)
?rbinom
rbinom(44, 1000, 0.64)
rbinom(1000, 44, 0.64)
rbinom(1000, 44, 0.64)
pnorm(1)
pnorm(0)
pi
t = c(pi^4/16, pi^3/8, pi^2/4, pi/2, pi^4/16, -pi^3/8, pi^2/4,-pi/2, 81*pi^4/16, 27*pi^3/8, 9*pi^2/4, 3*pi/2, 81*pi^4/16, -27*pi^3/8, 9*pi^2/4, -3*pi/2)
t
a = matrix(t, nrow = 4, byrow = TRUE)
a
b = c(-1,-1,-1,-1)
b
solve(a,b)
t = c(pi^4/16, pi^3/8, pi^2/4, pi/2, pi^4/16, -pi^3/8, pi^2/4,-pi/2, pi^4, pi^3, pi^2, pi, pi^4, -pi^3, pi^2, -pi)
t
b = c(-1,-1,-2,-2)
solve(a,b)
a
a = matrix(t, nrow = 4, byrow = TRUE)
a
b
solve(a,b)
t
b = c(-exp(0.25),-exp(0.25),-2*exp(0.25),-2*exp(0.25))
solve(a,b)
b
b1 = c(-exp(1.6),-exp(1.6),-2*exp(1.6), -2*exp(1.6))
solve(a,b1)
b2 = c(-exp(3.25),-exp(3.25),-2*exp(3.25), -2*exp(3.25))
solve(a,b2)
knitr::opts_chunk$set(echo = TRUE)
df1 = read.csv('ques5b.csv')
View(df1)
df1 = read.csv('ques5b.csv')
View(df1)
seq(0,10,0.01)
length(seq(0,10,0.01))
length(seq(0,9.99,0.01))
df1$x = seq(0,9.99,0.01)
View(df1)
library("reshape2")
library("ggplot2")
df1 = read.csv('ques5b.csv')
df1$x = seq(0,9.99,0.01)
df1_melt = melt(df1, id="x")
library("reshape2")
library("ggplot2")
df1 = read.csv('ques5b.csv')
df1$x = seq(0,9.99,0.01)
df1_melt = melt(df1, id="x")
View(df1_melt)
ggplot(data=df1_melt,
aes(x=x, y=value, colour=variable)) +
geom_line()
df = read.csv('ques5a.csv')
View(df)
df = read.csv('ques5a.csv')
df$x = seq(0,10,1)
View(df)
?acf
df
df1
acf(df1$p1)
acf(0.8)
?arima.sim
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
set.seed(12345)
y = arima.sim(n = 1000, list(ar = c(1.1, -0.25)))
acf(y, lag.max = 20)
y
mean(y)
source('~/.active-rstudio-document', echo=TRUE)
y
mean(y)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
y
source('~/.active-rstudio-document', echo=TRUE)
y
mean(y)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
z = c(1, -1.1, 0.25)
k = polyroot(z)
1- 1.1*1.28 + 0.25*1.28^2
k[1]
1 - 1.1*k[1] + 0.25*k[1]^2
w = 1/k
1/3.12
k
k = as.real(k)
Re(k)
phi1 = 1.1
phi2 = -0.25
phi_1 = 0.9
phi_2 = 0.8
phi_1^6+5*phi_1^4*phi_2+6*phi_1^2*phi_2^2+phi_2^3
knitr::opts_chunk$set(echo = TRUE)
z = c(1, -0.9, -0.8)
x = polyroot(z)
x
x = Re(x)
w = 1/x
sqrt(w[1]^2+w[2]^2)
setwd("C:/Users/sumen/Desktop/UCLA/405/project3/project3")
df = read.csv('prices_comp.csv')
View(df)
df = read.csv('prices_comp.csv')
S = seq(15, 24.99, 0.01)
S = seq(15, 25.99, 0.01)
plot(y = df$Monte, x = S)
plot(y = df$bs, x = S)
plot(y = df$Monte, x = S)
S = seq(15, 16.99, 0.01)
df$Monte[1:200]
plot(y = df$Monte[1:200], x = S[1:200])
plot(y = df$bs[1:200], x = S[1:200])
plot(y = df$Monte[1:100], x = S[1:100])
plot(y = df$bs[1:100], x = S[1:100])
